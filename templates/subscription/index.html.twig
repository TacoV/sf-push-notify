{% extends 'base.html.twig' %}

{% block title %}Subscription index{% endblock %}

{% block body %}

    <h1>Notification subscriptions</h1>

    <h2>Subscribe!</h2>

    <script>
        function registerServiceWorker() {
            if (!('serviceWorker' in navigator)) {
                console.error("Service Worker isn't supported on this browser.");
                return;
            }
            return navigator.serviceWorker
                .register('/service-worker.js')
                .then(function (registration) {
                    console.log('Service worker successfully registered.');
                    return registration;
                })
                .catch(function (err) {
                    console.error('Unable to register service worker.', err);
                });
        }

        const vapidPublicKey = 'BLtOgPYtZ3lNa4x6LAHap7MffDMZvDAk6kA9BoUwD50orS4Q2bPNtJ03vTYwVOtFBR404E8WOI7XxSymaZhCsHI'
        function subscribeUserToPush() {
            return navigator.serviceWorker
                .register('/service-worker.js')
                .then(function (registration) {
                    const subscribeOptions = {
                        userVisibleOnly: true,
                        applicationServerKey: urlBase64ToUint8Array(
                            vapidPublicKey
                        ),
                    };

                    return registration.pushManager.subscribe(subscribeOptions);
                })
                .then(function(subscription) {
                    return sendSubscriptionToBackEnd(subscription);
                });

        }

        function sendSubscriptionToBackEnd(subscription) {
            return fetch('/subscription/api', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(subscription),
                })
                .then(function (response) {
                    if (!response.ok) {
                        throw new Error('Bad status code from server.');
                    }
                    return response.json();
                })
                .then(function (responseData) {
                    if (!(responseData.data && responseData.data.success)) {
                        throw new Error('Bad response from server.');
                    }
                });
        }

        function askPermission() {
            return new Promise(function (resolve, reject) {
                const permissionResult = Notification.requestPermission(function (result) {
                    resolve(result);
                });

                if (permissionResult) {
                    permissionResult.then(resolve, reject);
                }
            }).then(function (permissionResult) {
                if (permissionResult !== 'granted') {
                    throw new Error("We weren't granted permission.");
                }
            });
        }

        function urlBase64ToUint8Array(base64String) {
            const padding = '='.repeat((4 - base64String.length % 4) % 4);
            const base64 = (base64String + padding)
                .replace(/\-/g, '+')
                .replace(/_/g, '/');

            const rawData = window.atob(base64);
            const outputArray = new Uint8Array(rawData.length);

            for (var i = 0; i < rawData.length; ++i) {
                outputArray[i] = rawData.charCodeAt(i);
            }
            return outputArray;
        }

        if (!('PushManager' in window)) {
            console.error("Push isn't supported on this browser.");
        }
    </script>

    <p>
        <button onclick="askPermission()">Fix the permission</button>
        <button onclick="subscribeUserToPush()">Subscribe</button>
    </p>

    <h2>Current subscriptions</h2>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Endpoint</th>
                <th>P256dh / Auth</th>
                <th>Last notified</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for subscription in subscriptions %}
            <tr>
                <td>{{ subscription.id }}</td>
                <td>
                    {{ subscription.endpoint[:55] }}...{{ subscription.endpoint[-10:] }}
                </td>
                <td>
                    {{ subscription.p256dh[:10] }}...{{ subscription.p256dh[-10:] }}
                    <br />
                    {{ subscription.auth }}
                </td>
                <td>
                    {{ include('subscription/_delete_form.html.twig') }}
                    {{ include('subscription/_notify_form.html.twig') }}
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">Currently no subscriptions!</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

{% endblock %}
